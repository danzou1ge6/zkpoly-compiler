- 编译前端
    -![x] 抽象语法树构造器
    - 翻译抽象语法树到Type2中间表示
        -![x] 为各个抽象语法树节点类型实现ast::TypeEraseable
        -![x] 为各个抽象语法树节点类型实现和ast::RuntimeCorrespondance
        -![x] 宏展开不同参数数量的用户函数
    -![x] 将常量添加到常量表
    -![ ] 类型重建
    - [ ] 用户函数可以使用内存分配器
- 编译后端
    - Type2中间表示
        -![x] 添加Extend顶点
        -![x] 移除LiteralScalar顶点
        -![ ] 在Entry顶点中添加EntryId标记输入
    - NTT算子
        -![ ] 预计算旋转因子
    - MSM算子
        -![ ] 预计算椭圆曲线点
    - 算子融合
        -![ ] 基于规则的算术运算融合
        -![ ] 将NewPoly转换为标量常量
    - 算子调度
        - [x] 启发式单卡调度算法
        - [ ] 在调度算法中考虑临时空间
        - [ ] 启发式多卡调度算法
    - 对象分析
        - [x] 消去计算图中元组和数组操作
        - [x] 确定多项式旋转和切片信息
        -![ ] 生命周期分析中处理返回值和未使用值
        - [ ] 根据生命周期决定多项式算术是否原地计算
    - 内存分配
        - [x] GPU内存的静态分配
        -![x] 确定各个算子的临时空间需求
        -![x] 支持单个算子、多块临时空间
        -![x] 不允许切片后再次切片或旋转
        -![x] 插入旋转和切片指令
        -![x] 强制MSM输入多项式不能包含旋转或者切片
        -![x] 强制GPU算子输入多项式不能包含切片
    - 执行轨同步
        - [x] 将算子分配到各个线程和流并确定依赖关系
        - [x] 插入同步指令
    - FuncCall指令生成
        -![x] 处理出参
        - [ ] 处理Track::CoProcess的多流情况
    - 多项式算术
        - [x] 算术表达式编译到CUDA
        - [ ] 根据多项式阶数决定是否切片，根据是否切片决定是否为协计算算子
        - [ ] 为切片多项式算术算子编译并生成算子函数
- 运行时
    - CPU算子
        -![ ] Blind算子
        -![ ] Interplote算子
        -![ ] AssemblePoly算子
        -![ ] 接入Transcript
    -![x] 加载常数指令
    - MSM算子
        - [ ] 各GPU流作为参数输入
